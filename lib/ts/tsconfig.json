{
  "compilerOptions": {
    // 编译成js版本, 因为有babel兜底，加上我们需要用到es6+的特性，这个target版本用最新的
    "target": "ESNext",
    // 允许编译js ts文件引入js模块
    "allowJs": true,
    // 跳过d.ts声明文件的类型检查
    "skipLibCheck": true,
    // 建议开启严格模式 https://www.typescriptlang.org/v2/en/tsconfig#strict
    "strict": true,
    // 允许import没有default export的模块(如 react)
    "allowSyntheticDefaultImports": true,
    // 导入要和文件名一致，区分大小写，比如macos不区文件名大小写 linux区分
    "forceConsistentCasingInFileNames": true,
    // 导出的模块es模块
    "module": "esnext",
    // 模块作用机制 node, 比如import的时候node会先去找node_modules
    "moduleResolution": "node",
    // import json文件
    "resolveJsonModule": true,
    // 文件都要是一个模块 有export
    "isolatedModules": true,
    // 不输出js
    "noEmit": true,
    // jsx的编译方式，react:使用 React.createElement处理jsx
    "jsx": "react",
    // 建议设置，如果需要给目录取别名的时候
    "baseUrl": ".",
    // 目录别名
    "paths": {}
  },
  "include": [
    "app/src"
  ],
  "exclude": [
    "node_modules",
    "bin",
    "scripts"
  ]
}